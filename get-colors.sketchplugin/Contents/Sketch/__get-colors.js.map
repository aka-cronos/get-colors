{"version":3,"sources":["webpack://exports/webpack/bootstrap","webpack://exports/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://exports/./src/get-colors.js","webpack://exports/external \"sketch\""],"names":["doc","sketch","getSelectedDocument","colors","swatches","length","UI","alert","formattedColors","reduce","prev","color","name","toLowerCase","type","savePanel","NSSavePanel","setNameFieldStringValue","setPrompt","runModal","file","NSString","stringWithString","JSON","stringify","filePath","URL","path","writeToFile_atomically_encoding_error","NSUTF8StringEncoding"],"mappings":";;;;;;;;QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA,6E;;;;;;;;;;;;;;;;;;;;;;;AChBA;AAEe,2EAAM;AACnB,MAAMA,GAAG,GAAGC,6CAAM,CAACC,mBAAP,EAAZ;AACA,MAAMC,MAAM,GAAGH,GAAG,CAACI,QAAnB;;AAEA,MAAI,CAACD,MAAM,CAACE,MAAZ,EAAoB;AAClBJ,iDAAM,CAACK,EAAP,CAAUC,KAAV,CAAgB,WAAhB,EAA6B,qBAA7B;AACD,GAFD,MAEO;AACL,QAAMC,eAAe,GAAGL,MAAM,CAACM,MAAP,CACtB,UAACC,IAAD,EAAOC,KAAP;AAAA,6CACKD,IADL;AAEE,SAACC,KAAK,CAACC,IAAN,CAAWC,WAAX,EAAD,GAA4BF,KAAK,CAACA;AAFpC;AAAA,KADsB,EAKtB,EALsB,CAAxB;AAQA,QAAMG,IAAI,GAAG,MAAb;AACA,QAAMC,SAAS,GAAGC,WAAW,CAACD,SAAZ,EAAlB;AAEAA,aAAS,CAACE,uBAAV,CAAkC,YAAYH,IAA9C;AACAC,aAAS,CAACG,SAAV,CAAoB,MAApB;AAEAH,aAAS,CAACI,QAAV;AAEA,QAAMC,IAAI,GAAGC,QAAQ,CAACC,gBAAT,CACXC,IAAI,CAACC,SAAL,CAAehB,eAAf,EAAgC,IAAhC,EAAsC,CAAtC,CADW,CAAb;AAGA,QAAMiB,QAAQ,GAAGV,SAAS,CAACW,GAAV,GAAgBC,IAAhB,EAAjB;AACAP,QAAI,CAACQ,qCAAL,CACEH,QADF,EAEE,IAFF,EAGEI,oBAHF,EAIE,IAJF;AAOA5B,iDAAM,CAACK,EAAP,CAAUC,KAAV,CAAgB,iBAAhB,EAAmC,6BAAnC;AACD;AACF,CApCD,E;;;;;;;;;;;ACFA,mC","file":"__get-colors.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/get-colors.js\");\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","import sketch from 'sketch'\n\nexport default () => {\n  const doc = sketch.getSelectedDocument()\n  const colors = doc.swatches\n\n  if (!colors.length) {\n    sketch.UI.alert('No Colors', 'There is no colors!')\n  } else {\n    const formattedColors = colors.reduce(\n      (prev, color) => ({\n        ...prev,\n        [color.name.toLowerCase()]: color.color,\n      }),\n      {}\n    )\n\n    const type = 'json'\n    const savePanel = NSSavePanel.savePanel()\n\n    savePanel.setNameFieldStringValue('colors.' + type)\n    savePanel.setPrompt('Save')\n\n    savePanel.runModal()\n\n    const file = NSString.stringWithString(\n      JSON.stringify(formattedColors, null, 2)\n    )\n    const filePath = savePanel.URL().path()\n    file.writeToFile_atomically_encoding_error(\n      filePath,\n      true,\n      NSUTF8StringEncoding,\n      null\n    )\n\n    sketch.UI.alert('Colors exported', 'Colors exporte succesfully!')\n  }\n}\n","module.exports = require(\"sketch\");"],"sourceRoot":""}